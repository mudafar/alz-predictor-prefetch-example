{"version":3,"sources":["predictor.js","Navbar.js","constants.js","Home.js","Loader.js","Posts.js","Comments.js","Todos.js","Users.js","api.js","App.js","reportWebVitals.js","index.js"],"names":["LINKS","STORAGE_KEY","PREDICT_LINK_MAP","predictor","ALZ","storedALZ","localStorage","getItem","saveToStorage","setItem","JSON","stringify","loadJSON","add","link","get","predictions","predict","sortedPredictions","Object","keys","sort","a","b","probability","object","searchValue","entries","key","getByValue","reset","POSTS","COMMENTS","USERS","TODOS","HOME","Sidebar","onPredict","Navbar","bg","variant","fixed","Brand","as","Link","to","onClick","Nav","className","Button","style","marginRight","Home","Jumbotron","Loader","props","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","Posts","posts","onFetch","useEffect","length","Container","fluid","Row","map","post","Card","margin","border","Header","title","Body","Text","body","id","Comments","comments","comment","Toast","closeButton","name","parseInt","Math","random","Todos","todos","ListGroup","todo","Item","active","completed","Users","users","Table","striped","bordered","hover","user","email","username","getJSON","data","Promise","resolve","reject","setTimeout","getPosts","getUsers","getComments","getTodos","fetchAndSet","getData","setData","App","useState","setPosts","setUsers","setComments","setTodos","alert","setAlert","fetchPosts","fetchUsers","fetchComments","fetchTodos","showAlert","message","toFixed","Alert","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5783d5d.chunk.js","sourcesContent":["import ALZ from 'alz-predictor'\n\n\nexport const LINKS = {\n  USERS: 'users',\n  POSTS: 'posts',\n  TODOS: 'todos',\n  COMMENTS: 'comments',\n  HOME: 'home',\n}\n\n\nexport default (function predictor() {\n  const STORAGE_KEY = 'alz-predictor'\n  const PREDICT_LINK_MAP = {\n    [LINKS.USERS]: 'u',\n    [LINKS.POSTS]: 'p',\n    [LINKS.TODOS]: 't',\n    [LINKS.COMMENTS]: 'c',\n    [LINKS.HOME]: 'h',\n  }\n\n  function getByValue(object, searchValue) {\n    for (let [key, value] of Object.entries(object)) {\n      if (value === searchValue)\n        return key;\n    }\n  }\n\n  let predictor = new ALZ()\n\n  const storedALZ = localStorage.getItem(STORAGE_KEY)\n  if (storedALZ) {\n    predictor.loadJSON(storedALZ)\n  }\n\n\n  function saveToStorage() {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(predictor))\n  }\n\n  function addPrediction(link) {\n    predictor.add(PREDICT_LINK_MAP[link])\n    // todo: debounce saving\n    saveToStorage()\n  }\n\n  function getPrediction() {\n    const predictions = predictor.predict()\n    const sortedPredictions = Object.keys(predictions).sort((a, b) => predictions[b] - predictions[a])\n\n    const probability = predictions[sortedPredictions[0]]\n    const link = getByValue(PREDICT_LINK_MAP, sortedPredictions[0])\n\n    return ({\n      link,\n      probability,\n    })\n  }\n\n  function reset() {\n    predictor = new ALZ()\n    saveToStorage()\n  }\n\n  return ({\n    add: addPrediction,\n    get: getPrediction,\n    reset,\n  })\n\n})()\n\n","import { Link } from \"react-router-dom\";\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\n\n\nimport predictor, { LINKS } from './predictor'\n\n\nconst { POSTS, COMMENTS, USERS, TODOS, HOME } = LINKS\n\n\nexport default function Sidebar({ onPredict }) {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n      <Navbar.Brand as={Link} to=\"/\" onClick={() => predictor.add(HOME)}>Home</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        <Nav.Link as={Link} to=\"/users\" onClick={() => predictor.add(USERS)}>Users</Nav.Link>\n        <Nav.Link as={Link} to=\"/posts\" onClick={() => predictor.add(POSTS)}>Posts</Nav.Link>\n        <Nav.Link\n          as={Link}\n          to=\"/comments\"\n          onClick={() => predictor.add(COMMENTS)}\n        >\n          Comments\n        </Nav.Link>\n        <Nav.Link as={Link} to=\"/todos\" onClick={() => predictor.add(TODOS)}>Todos</Nav.Link>\n      </Nav>\n      <Button variant=\"primary\" onClick={onPredict} style={{ marginRight: '1rem' }}>Predict</Button>\n\n      <Button variant=\"danger\" onClick={() => predictor.reset()}>Reset training</Button>\n    </Navbar>\n  )\n}","export const COMPONENTS = {\n  USERS: 'users',\n  POSTS: 'posts',\n  USERS: 'users',\n  COMMENTS: 'comments',\n  HOME: 'home',\n}\n\nexport const PROBABILITY_THRESHOLD = 0.70\n","import Jumbotron from 'react-bootstrap/Jumbotron'\n\nimport { PROBABILITY_THRESHOLD } from './constants'\n\n\nexport default function Home() {\n  return (\n    <Jumbotron>\n      <h1>Home</h1>\n      <p>Click on any navbar link to start training the model.</p>\n      <p>Click on Predict button to get the prediction.</p>\n      <p>\n        The model will try to predict next user action with highest probability.<br />\n        If the the prediction probability is greater than {PROBABILITY_THRESHOLD}, then the app will prefetch needed data.\n      </p>\n    </Jumbotron>\n  )\n}","import React from \"react\"\nimport ContentLoader from \"react-content-loader\"\n\nexport default function Loader(props) {\n  return (\n    <ContentLoader\n      speed={2}\n      width={476}\n      height={145}\n      viewBox=\"0 0 476 145\"\n      backgroundColor=\"#f3f3f3\"\n      foregroundColor=\"#ecebeb\"\n      {...props}\n    >\n      <rect x=\"3\" y=\"7\" rx=\"3\" ry=\"3\" width=\"88\" height=\"6\" />\n      <rect x=\"1\" y=\"41\" rx=\"3\" ry=\"3\" width=\"52\" height=\"6\" />\n      <rect x=\"0\" y=\"56\" rx=\"3\" ry=\"3\" width=\"410\" height=\"6\" />\n      <rect x=\"0\" y=\"72\" rx=\"3\" ry=\"3\" width=\"380\" height=\"6\" />\n      <rect x=\"0\" y=\"88\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n      <rect x=\"3\" y=\"25\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n      <rect x=\"2\" y=\"100\" rx=\"3\" ry=\"3\" width=\"88\" height=\"6\" />\n      <rect x=\"0\" y=\"134\" rx=\"3\" ry=\"3\" width=\"52\" height=\"6\" />\n      <rect x=\"-2\" y=\"114\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n    </ContentLoader>\n  )\n}\n","import { useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Loader from \"./Loader\";\n\n\nexport default function Posts({ posts, onFetch }) {\n  useEffect(() => {\n    if (!posts.length) {\n      onFetch()\n    }\n  }, [posts, onFetch])\n\n  if (!posts.length){\n    return <Loader />\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        {posts.map(post => (\n          <Card style={{ width: '18rem', margin: '1rem' }} border=\"info\" key={post.id} >\n            <Card.Header>{post.title}</Card.Header>\n            <Card.Body>\n              <Card.Text>{post.body}</Card.Text>\n            </Card.Body>\n          </Card>\n        ))}\n      </Row>\n    </Container>\n  )\n}","import { useEffect } from \"react\";\nimport Toast from \"react-bootstrap/Toast\";\nimport Loader from \"./Loader\";\n\nexport default function Comments({ comments, onFetch }) {\n  useEffect(() => {\n    if (!comments.length) {\n      onFetch()\n    }\n  }, [comments, onFetch])\n\n  if (!comments.length){\n    return <Loader />\n  }\n\n  return (\n    comments.map(comment => (\n      <Toast key={comment.id}>\n        <Toast.Header closeButton={false}>\n          <strong className=\"mr-auto\">{comment.name}</strong>\n          <small>{parseInt(Math.random()*10)} mins ago</small>\n        </Toast.Header>\n        <Toast.Body>{comment.body}</Toast.Body>\n      </Toast>\n    ))\n  )\n\n}","import { useEffect } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Loader from \"./Loader\";\n\nexport default function Todos({ todos, onFetch }) {\n  useEffect(() => {\n    if (!todos.length) {\n      onFetch()\n    }\n  }, [todos, onFetch])\n\n\n  if (!todos.length){\n    return <Loader />\n  }\n\n\n  return (\n    <ListGroup>\n      {todos.map(todo => (\n        <ListGroup.Item key={todo.id} active={todo.completed}>{todo.title}</ListGroup.Item>\n      ))}\n    </ListGroup>\n  )\n}","import { useEffect } from \"react\"\nimport Table from \"react-bootstrap/Table\"\nimport Loader from \"./Loader\"\n\nexport default function Users({ users, onFetch }) {\n  useEffect(() => {\n    if (!users.length) {\n      onFetch()\n    }\n  }, [users, onFetch])\n\n  if (!users.length){\n    return <Loader />\n  }\n\n  return (\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>Name</th>\n          <th>Email</th>\n          <th>Username</th>\n        </tr>\n      </thead>\n      <tbody>\n        {users.map( user => (\n          <tr key={user.id}>\n            <td>{user.id}</td>\n            <td>{user.name}</td>\n            <td>{user.email}</td>\n            <td>{user.username}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n\n  )\n}","import posts from './posts.json'\nimport users from './users.json'\nimport comments from './comments.json'\nimport todos from './todos.json'\n\n\nconst MAX_TIMEOUT = 5000\n\nconst getJSON = (data) => () => new Promise((resolve, reject) => {\n  setTimeout(() => resolve(data),\n    Math.random() * MAX_TIMEOUT)\n})\n\n\nexport const getPosts = getJSON(posts)\nexport const getUsers = getJSON(users)\nexport const getComments = getJSON(comments)\nexport const getTodos = getJSON(todos)\n","import { useState } from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Alert from 'react-bootstrap/Alert'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\n\n\nimport Navbar from './Navbar'\nimport Home from './Home'\nimport Posts from \"./Posts\";\nimport Comments from \"./Comments\";\nimport Todos from \"./Todos\";\nimport Users from \"./Users\";\nimport { getPosts, getUsers, getComments, getTodos } from './api'\nimport { PROBABILITY_THRESHOLD } from './constants'\nimport predictor, { LINKS } from './predictor'\n\n\nconst fetchAndSet = (getData, setData) => async () => {\n  const data = await getData()\n  setData(data)\n}\n\nfunction App() {\n  const [posts, setPosts] = useState([])\n  const [users, setUsers] = useState([])\n  const [comments, setComments] = useState([])\n  const [todos, setTodos] = useState([])\n  const [alert, setAlert] = useState()\n\n  const fetchPosts = fetchAndSet(getPosts, setPosts)\n  const fetchUsers = fetchAndSet(getUsers, setUsers)\n  const fetchComments = fetchAndSet(getComments, setComments)\n  const fetchTodos = fetchAndSet(getTodos, setTodos)\n\n  function showAlert(message) {\n    setAlert(message)\n    setTimeout(() => setAlert(), 4000)\n  }\n\n  function predict() {\n    const { link, probability } = predictor.get()\n    if (!link) {\n      showAlert('No training data!, please click on any link')\n      return\n    }\n\n    if (probability < PROBABILITY_THRESHOLD) {\n      showAlert(` Prediction is ${link} with probability < ${PROBABILITY_THRESHOLD}, more training is needed`)\n      return\n    }\n\n    switch (link) {\n      case LINKS.COMMENTS:\n        fetchComments()\n        break\n      case LINKS.POSTS:\n        fetchPosts()\n        break\n      case LINKS.USERS:\n        fetchUsers()\n        break\n      case LINKS.TODOS:\n        fetchTodos()\n        break\n      default:\n        break\n    }\n    showAlert(`Prefetching |${link}| with probability: ${probability.toFixed(2)}`)\n  }\n\n  return (\n    <Router>\n      <Navbar onPredict={predict} />\n      <Container fluid>\n        {alert && (\n          <Alert variant='primary'>\n            {alert}\n          </Alert>\n        )}\n        <Switch>\n          <Route path=\"/posts\">\n            <Posts posts={posts} onFetch={fetchPosts} />\n          </Route>\n          <Route path=\"/comments\">\n            <Comments comments={comments} onFetch={fetchComments} />\n          </Route>\n          <Route path=\"/todos\">\n            <Todos todos={todos} onFetch={fetchTodos} />\n          </Route>\n          <Route path=\"/users\">\n            <Users users={users} onFetch={fetchUsers} />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Container>\n\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}